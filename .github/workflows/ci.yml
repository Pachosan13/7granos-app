name: CI
on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # 1) Detecta carpeta de la app (donde esté el primer package.json)
      - name: Detect APP_PATH
        id: detect
        shell: bash
        run: |
          set -e
          APP_PATH="$(git ls-files **/package.json | head -n1 | xargs dirname || true)"
          if [ -z "$APP_PATH" ]; then
            echo "No se encontró package.json"; exit 1
          fi
          echo "APP_PATH=$APP_PATH" >> $GITHUB_ENV
          echo "App path: $APP_PATH"

      # 2) Node sin cache (evita el error de 'paths not resolved')
      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 3) Instala deps (usa ci si hay lockfile; si no, install)
      - name: Install deps
        working-directory: ${{ env.APP_PATH }}
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      # 4) Typecheck/Lint no bloqueantes (para ir poniendo en verde con Codex)
      - name: Typecheck (non-blocking)
        working-directory: ${{ env.APP_PATH }}
        run: npm run typecheck || true

      - name: Lint (non-blocking)
        working-directory: ${{ env.APP_PATH }}
        run: npm run lint || true

      # 5) Build tolerante (si no hay script build, no falla; CRA Warnings no rompen)
      - name: Build
        working-directory: ${{ env.APP_PATH }}
        run: |
          if npm pkg get scripts.build | grep -qv null; then
            CI=false npm run build
          else
            echo "No build script; skipping"
          fi
